name: Django CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: github_actions
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest coverage
        
    - name: Run Migrations
      env:
        DJANGO_SETTINGS_MODULE: school_attendance.settings
        DJANGO_SECRET_KEY: github_actions_test_key
        DB_NAME: test_db
        DB_USER: root
        DB_PASSWORD: github_actions
        DB_HOST: 127.0.0.1
      run: |
        python manage.py migrate
        
    - name: Run Tests
      env:
        DJANGO_SETTINGS_MODULE: school_attendance.settings
        DJANGO_SECRET_KEY: github_actions_test_key
        DB_NAME: test_db
        DB_USER: root
        DB_PASSWORD: github_actions
        DB_HOST: 127.0.0.1
      run: |
        python manage.py test
        
    - name: Run Code Quality Checks
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  deploy:
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      if: success()
      run: |
        echo "Deployment would happen here"
        # Add actual deployment steps when ready to deploy to PythonAnywhere
        # This will be configured once we set up PythonAnywhere deployment
